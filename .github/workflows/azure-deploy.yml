name: Deploy to Azure Web App

on:
  workflow_dispatch:
  # Push trigger comentado para evitar deploy automático no primeiro commit
  # Descomente as linhas abaixo se quiser deploy automático em futuros pushes:
  # push:
  #   branches:
  #     - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Build Backend
        working-directory: ./backend
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present -- --passWithNoTests

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build
          # Create out directory for static export if using Next.js
          npm run export || true

      - name: Prepare deployment structure
        run: |
          mkdir -p deployment/backend
          mkdir -p deployment/frontend
          
          # Copy backend
          cp -r backend/* deployment/backend/
          
          # Copy frontend build output
          if [ -d "frontend/.next" ]; then
            cp -r frontend/.next deployment/frontend/
            cp -r frontend/public deployment/frontend/ || true
            cp frontend/package.json deployment/frontend/
            cp frontend/package-lock.json deployment/frontend/ || true
            cp frontend/next.config.mjs deployment/frontend/ || true
          fi
          
          # Copy frontend static files if exported
          if [ -d "frontend/out" ]; then
            cp -r frontend/out deployment/frontend/
          fi
          
          # Copy startup script if exists
          if [ -f "startup.sh" ]; then
            cp startup.sh deployment/
          fi
          
          # Create startup script with proper line endings
          printf '#!/bin/bash\n' > deployment/startup.sh
          printf 'echo "Starting Full Stack Application..."\n' >> deployment/startup.sh
          printf 'cd /home/site/wwwroot\n\n' >> deployment/startup.sh
          printf '# Start backend API\n' >> deployment/startup.sh
          printf 'echo "Starting backend API on port 3001..."\n' >> deployment/startup.sh
          printf 'cd backend\n' >> deployment/startup.sh
          printf 'PORT=3001 npm start &\n' >> deployment/startup.sh
          printf 'BACKEND_PID=$!\n\n' >> deployment/startup.sh
          printf '# Wait for backend\n' >> deployment/startup.sh
          printf 'sleep 5\n\n' >> deployment/startup.sh
          printf '# Start frontend\n' >> deployment/startup.sh
          printf 'echo "Starting frontend on port 8080..."\n' >> deployment/startup.sh
          printf 'cd ../frontend\n' >> deployment/startup.sh
          printf 'PORT=8080 npm start &\n' >> deployment/startup.sh
          printf 'FRONTEND_PID=$!\n\n' >> deployment/startup.sh
          printf 'echo "Application started!"\n' >> deployment/startup.sh
          printf 'echo "Backend PID: $BACKEND_PID"\n' >> deployment/startup.sh
          printf 'echo "Frontend PID: $FRONTEND_PID"\n\n' >> deployment/startup.sh
          printf '# Keep processes running\n' >> deployment/startup.sh
          printf 'wait $BACKEND_PID $FRONTEND_PID\n' >> deployment/startup.sh
          chmod +x deployment/startup.sh

      - name: Zip artifact for deployment
        run: |
          cd deployment
          zip -r ../release.zip .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'expandev-01'
          package: .
          startup-command: 'bash /home/site/wwwroot/startup.sh'